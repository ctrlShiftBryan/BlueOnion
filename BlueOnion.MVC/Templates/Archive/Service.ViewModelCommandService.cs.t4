<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="EnvDTE" #>
<#// assembly name="C:\Code\scaffold-net\DTNetScaffolder\DTNetScaffolder\bin\Debug\DTNetScaffolder.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ parameter name="Model" type="DTNetScaffolder.TemplateViewModel" #>
/// This code was generated by DTNet Scaffolder.
// template: Service.ViewModelCommandService.cs
// class: <#= Model.Name #>
using Domain.Interfaces;
using Domain.Model;
using Repository;
using System;
using ViewModel;
using ViewModel.Interfaces;

namespace Service.Command
{
	public class <#= Model.Name #>ViewModelCommandService : ViewModelCommandServiceBase<<#= Model.Name #>, <#= Model.Name #>ViewModel, <#= Model.Name #>Dto, <#= Model.Name #>DetailDto, IRepository<<#= Model.Name #>, Guid>, Guid>, I<#= Model.Name #>ViewModelCommandService
    {
        public <#= Model.Name #>ViewModelCommandService(IUnitOfWork unitOfWork, IUser user, IRepositoriesWrapper repositories, IDomainServices domainServices) 
			: base(unitOfWork, user, repositories, repositories.<#= Model.Name #>Repository, domainServices)
        {

        }

		public override Guid GetDefaultIdValue()
        {
            return Guid.Empty;
        }

	    public override Guid GetInsertIdValue()
	    {
            return Guid.NewGuid();
	    }
    }
}