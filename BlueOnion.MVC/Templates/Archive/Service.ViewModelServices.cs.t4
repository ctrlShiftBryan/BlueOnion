<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="EnvDTE" #>
<#// assembly name="C:\Code\scaffold-net\DTNetScaffolder\DTNetScaffolder\bin\Debug\DTNetScaffolder.dll" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ parameter name="Model" type="DTNetScaffolder.TemplateViewModel" #>
/// This code was generated by DTNet Scaffolder.
// template: Service.ViewModelServices.cs
// class: <#= Model.Name #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Service.Command;
using Service.Query;
using ViewModel;
using ViewModel.Interfaces;

namespace Service
{


    public partial class ViewModelServices : IViewModelServices
    {
		public IUtilityService UtilityService { get; private set; }
		 	
		<#

				foreach (var model in Model.AllModelTypes.OrderBy(x => x.Name))
				{
		#>
			public I<#= model.Name #>ViewModelQueryService <#= model.Name #>ViewModelQueryService { get; private set; }
					public I<#= model.Name #>ViewModelCommandService <#= model.Name #>ViewModelCommandService { get; private set; }
		<#
				}
		#>	

        public ViewModelServices( IUtilityService utilityService,
        <#
			var index = Model.AllModelTypes.Length;
			foreach (var model in Model.AllModelTypes.OrderBy(x => x.Name))
			{
		#>  
			I<#= model.Name #>ViewModelQueryService <#= Model.CamelCase(model.Name) #>ViewModelQueryService,
            I<#= model.Name #>ViewModelCommandService <#= Model.CamelCase(model.Name) #>ViewModelCommandService<# index = index - 1; if (index > 0) { #> , <# } } #>
		)
        {
			UtilityService = utilityService;
		<#
				foreach (var model in Model.AllModelTypes.OrderBy(x => x.Name))
				{
		#>
			<#= model.Name #>ViewModelQueryService = <#= Model.CamelCase(model.Name) #>ViewModelQueryService;
            <#= model.Name #>ViewModelCommandService = <#= Model.CamelCase(model.Name) #>ViewModelCommandService;
		<#
				}
		#>
        }
    }
}