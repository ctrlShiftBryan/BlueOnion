<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="EnvDTE" #>
<#// assembly name="C:\Code\scaffold-net\DTNetScaffolder\DTNetScaffolder\bin\Debug\DTNetScaffolder.dll" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ parameter name="Model" type="DTNetScaffolder.TemplateViewModel" #>
/// This code was generated by DTNet Scaffolder.
// template: Service.RepositoriesWrapper.cs
// class: <#= Model.Name #>
using Domain.Interfaces;
using Domain.Model;
using Repository;
namespace Service
{


    public partial class RepositoriesWrapper : IRepositoriesWrapper
    {

		<#
				foreach (var model in Model.AllModelTypes.OrderBy(x => x.Name))
				{
		#>
public I<#= model.Name #>Repository <#= model.Name #>Repository { get; private set; }
		<#
				}
		#>	
        public RepositoriesWrapper(
        <#
			foreach (var model in Model.AllModelTypes.OrderBy(x => x.Name))
			{
		#>
     I<#= model.Name #>Repository <#= Model.CamelCase(model.Name) #>Repository,
		<#}#>	
            IUnitOfWork uow, 
            IUser user)
        {
		<#
				foreach (var model in Model.AllModelTypes.OrderBy(x => x.Name))
				{
		#>
    <#= model.Name #>Repository = <#= Model.CamelCase(model.Name) #>Repository;
		<#
				}
		#>
            InitRepos(user, uow);
        }
    }
}